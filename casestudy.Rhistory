# This is an example of a case study portfolio
# specifically created in R to incorporate code for 
# detailing the processes in analyzing 
# a sample of data

install.packages("tidyverse")  # installing required packages for data import

library(tidyverse)
library(lubridate)

library(ggplot2)  # installing for data visualization

getwd()

setwd("/cloud/project")  # setting library location for dataset import

# Files uploaded manually as I have used RStudio Cloud for input.

q12<-read.csv("202012-divvy-tripdata.csv")  # upload files for data manipulation
q01<-read.csv("202101-divvy-tripdata.csv")  # ranging from December 20 to February 21
q02<-read.csv("202102-divvy-tripdata.csv")  # as a sample dataset

colnames(q12)  # view columns for data information

colnames(q01)
colnames(q02) 

q12<-rename(q12,trip_id=ride_id,bikeid=rideable_type,start_time=started_at,end_time=ended_at
             ,from_station_name=start_station_name,to_station_name=end_station_name,
             from_station_id=start_station_id,to_station_id=end_station_id,usertype=member_casual)  # rename columns for better sorting a
q01<-rename(q01,trip_id=ride_id,bikeid=rideable_type,start_time=started_at,end_time=ended_at        # and clarity in data
             ,from_station_name=start_station_name,to_station_name=end_station_name,
             from_station_id=start_station_id,to_station_id=end_station_id,usertype=member_casual)
             
q02<-rename(q02,trip_id=ride_id,bikeid=rideable_type,start_time=started_at,end_time=ended_at
             ,from_station_name=start_station_name,to_station_name=end_station_name,
             from_station_id=start_station_id,to_station_id=end_station_id,usertype=member_casual)

str(q12)  # view contents of the table and other insights

str(q01)
str(q02)

q12<-mutate(q12,trip_id=as.character(trip_id),bikeid=as.character(bikeid))  # change column header data type
q01<-mutate(q01,trip_id=as.character(trip_id),bikeid=as.character(bikeid))  # for better visualization

q02<-mutate(q02,trip_id=as.character(trip_id),bikeid=as.character(bikeid)) 

q12<-mutate(q12,end_time=as.character(end_time))
q01<-mutate(q01,end_time=as.character(end_time))
q02<-mutate(q02,end_time=as.character(end_time))

all_trips<-bind_rows(q12,q01,q02)  # combining datasets into single observation

all_trips<-all_trips%>%select(-c(start_lat,start_lng,end_lat,end_lng)) # removing columns not required in study

colnames(all_trips)  #use to obtain dataset information as
nrow(all_trips)      #no of columns, rows, dimensions
ncol(all_trips)      #and overview

dim(all_trips)
head(all_trips)

all_trips$date <- as.Date(all_trips$start_time)
all_trips$month <- format(as.Date(all_trips$date), "%m")     #format date as UTC format

all_trips$day <- format(as.Date(all_trips$date), "%d")
all_trips$year <- format(as.Date(all_trips$date), "%Y")
all_trips$day_of_week <- format(as.Date(all_trips$date), "%A")

all_trips$ride_length <- difftime(all_trips$end_time,all_trips$start_time)  #add new column ride_length based on
                                                                            # difference b/w start and end time

is.factor(all_trips$ride_length)           # convert ride_length to numeric data

all_trips$ride_length <- as.numeric(as.character(all_trips$ride_length))
is.numeric(all_trips$ride_length)

all_trips_v2<-all_trips[!(all_trips$from_station_name == "HQ QR" | all_trips$ride_length<0),]  #filter sets with unwanted data
summary(all_trips_v2$ride_length)  #obtain mesures of central tendency

aggregate(all_trips_v2$ride_length ~ all_trips_v2$usertype, FUN = mean)
aggregate(all_trips_v2$ride_length ~ all_trips_v2$usertype, FUN = max)
aggregate(all_trips_v2$ride_length ~ all_trips_v2$usertype, FUN = min)
aggregate(all_trips_v2$ride_length ~ all_trips_v2$usertype + all_trips_v2$day_of_week, FUN = mean)

all_trips_v2 %>% 
+     mutate(weekday = wday(start_time, label = TRUE)) %>%   # visualization using column chart
+     group_by(usertype, weekday) %>%                        # using axis inputs as weekday 
+     summarise(number_of_rides = n()                        # and usertype as legend

+               ,average_duration = mean(ride_length)) %>% 
+     arrange(usertype, weekday)  %>% 
+     ggplot(aes(x = weekday, y = average_duration, fill = usertype)) +
+     geom_col(position = "dodge")